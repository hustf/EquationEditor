<!DOCTYPE html>
<html><head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Interact</title>
	<!-- for zooming and panning-->
		<link rel="modulepreload" href="./lib.mjs">
		<link rel="modulepreload" href="./main.mjs">
		<link rel="modulepreload" href="./events/events.mjs">
		<link rel="modulepreload" href="./gl-vec2/add.mjs">
		<link rel="modulepreload" href="./gl-vec2/ceil.mjs">
		<link rel="modulepreload" href="./gl-vec2/clone.mjs">
		<link rel="modulepreload" href="./gl-vec2/copy.mjs">
		<link rel="modulepreload" href="./gl-vec2/create.mjs">
		<link rel="modulepreload" href="./gl-vec2/cross.mjs">
		<link rel="modulepreload" href="./gl-vec2/dist.mjs">
		<link rel="modulepreload" href="./gl-vec2/distance.mjs">
		<link rel="modulepreload" href="./gl-vec2/div.mjs">
		<link rel="modulepreload" href="./gl-vec2/divide.mjs">
		<link rel="modulepreload" href="./gl-vec2/dot.mjs">
		<link rel="modulepreload" href="./gl-vec2/epsilon.mjs">
		<link rel="modulepreload" href="./gl-vec2/equals.mjs">
		<link rel="modulepreload" href="./gl-vec2/exactEquals.mjs">
		<link rel="modulepreload" href="./gl-vec2/floor.mjs">
		<link rel="modulepreload" href="./gl-vec2/forEach.mjs">
		<link rel="modulepreload" href="./gl-vec2/fromValues.mjs">
		<link rel="modulepreload" href="./gl-vec2/index.mjs">
		<link rel="modulepreload" href="./gl-vec2/inverse.mjs">
		<link rel="modulepreload" href="./gl-vec2/len.mjs">
		<link rel="modulepreload" href="./gl-vec2/length.mjs">
		<link rel="modulepreload" href="./gl-vec2/lerp.mjs">
		<link rel="modulepreload" href="./gl-vec2/limit.mjs">
		<link rel="modulepreload" href="./gl-vec2/max.mjs">
		<link rel="modulepreload" href="./gl-vec2/min.mjs">
		<link rel="modulepreload" href="./gl-vec2/mul.mjs">
		<link rel="modulepreload" href="./gl-vec2/multiply.mjs">
		<link rel="modulepreload" href="./gl-vec2/negate.mjs">
		<link rel="modulepreload" href="./gl-vec2/normalize.mjs">
		<link rel="modulepreload" href="./gl-vec2/random.mjs">
		<link rel="modulepreload" href="./gl-vec2/rotate.mjs">
		<link rel="modulepreload" href="./gl-vec2/round.mjs">
		<link rel="modulepreload" href="./gl-vec2/scale.mjs">
		<link rel="modulepreload" href="./gl-vec2/scaleAndAdd.mjs">
		<link rel="modulepreload" href="./gl-vec2/set.mjs">
		<link rel="modulepreload" href="./gl-vec2/sqrDist.mjs">
		<link rel="modulepreload" href="./gl-vec2/sqrLen.mjs">
		<link rel="modulepreload" href="./gl-vec2/squaredDistance.mjs">
		<link rel="modulepreload" href="./gl-vec2/squaredLength.mjs">
		<link rel="modulepreload" href="./gl-vec2/sub.mjs">
		<link rel="modulepreload" href="./gl-vec2/subtract.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat2.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat2d.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat3.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat4.mjs">
		<link rel="modulepreload" href="./impetus/impetus.mjs">
		<link rel="modulepreload" href="./mouse-event-offset/index.mjs">
		<link rel="modulepreload" href="./mouse-wheel/wheel.mjs">
		<link rel="modulepreload" href="./to-px/index.mjs">
		<link rel="modulepreload" href="./parse-unit/index.mjs">
		<link rel="modulepreload" href="./pan-zoom/index.mjs">
		<link rel="modulepreload" href="./touch-pinch/index.mjs">
		<link rel="modulepreload" href="./touch-position/index.mjs">
	<!-- svg conceptualization -->
	<link rel="modulepreload" href="./insertsvg.mjs">
	<link rel="modulepreload" href="./insertxhtml.mjs">
	<link rel="modulepreload" href="./fixed-size-foreignObject.mjs">
	<link rel="stylesheet" type="text/css" href="./browncyan.css">

	<!-- for markdown editor-->
	<link rel="modulepreload" href="/simplemde/simplemde.mjs">
	<link rel="stylesheet" type="text/css" href="/simplemde.css">
	<!-- 	<link rel="stylesheet" type="text/css" href="/css/normalize.css">-->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" type="text/css">-->
	<link rel="stylesheet" type="text/css" href="/css/stylesheet.css" media="screen">-->
	<link rel="stylesheet" type="text/css" href="/css/github-light.css" media="screen">-->

</head>
<body>

	<footer class="buttons">
		<button class="switch">Switch pointer events</button>
		<button class='zoom-out'>Zoom Out</button>
		<input type="range" class="zoom-range" step="0.05" min="0.3" max="6">
		<button class='zoom-in'>Zoom In</button>
		<button class="reset">Reset</button>
		<button class="previous">Previous</button>
		<input type ="text" class = "svgname" value="...">
		<button class="next">Next</button>
  	</footer>
</body>
<script nomodule>alert ("Your browser: does not support ES6 modules")</script>
<script type = "module">
	import {insertA3} from "/insertsvg.mjs"
	import {appendHtmlElemFromText} from "/insertxhtml.mjs"
	import {SimpleMDE} from "/simplemde/simplemde.mjs"
	let paper = insertA3(document.body)
	decorateA3(paper)
	// demonstrate text area simple editor
	{
		let fo = paper.addChild({tag:"foreignObject", width:247, height:40, x:25, y:50}) // requiredExtensions:"http://example.com/SVGExtensions/EmbeddedXHTML" is false in Chrome
		appendHtmlElemFromText(fo, `<textarea spellcheck="false">Edit here</textarea>`)
	}
	// demonstrate markdown editor based on text area.

//	let fo = paper.addChild({tag:"foreignObject", width:200, height:300, x:25, y:100})

//	let ta = appendHtmlElemFromText(fo, `<textarea id="demo1"># Intro
//Press ctrl-p to switch preview /edit.
//</textarea>`)
//		let mde = new SimpleMDE({	element: ta, spellChecker: false})



	// Why does the font family prevent proper display of the icons in mde? Could we choose freely,
// but keep those fonts anyway? How does font-family work?




function decorateA3(paper){
	paper.addChild({tag:"line", class:"co5", x1:25, y1:25, x2:272, y2:25})
	paper.addChild({tag:"image", x:25, y:5, height:20, width: 20, objectfit:"contain", href:"/svg/es2017-ecmascript-logo.svg"})
	paper.addChild({tag:"rect", x:25, y:32.52, height:2.48, width:5})
	paper.addChild({tag:"text",  x:35, y:35, textContent:"Calibri 10 pt, x = 35mm, y = 30mm. Built for Chrome."})
	paper.addChild({tag:"circle",  class:"co5", cx:0, cy:420, r:210})
	paper.addChild({tag:"text",   x:0, y:420, class:"co5", textContent:"circle class co5"})
}




</script>
	<script type = "module" src = "/EE_panzoom.mjs"></script>
</html>
