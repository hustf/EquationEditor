<!DOCTYPE html>
<html><head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Interact</title>
	<link rel="stylesheet" type="text/css" href="./browncyan.css">
	<!-- for zooming and panning-->
		<link rel="modulepreload" href="./lib.mjs">
		<link rel="modulepreload" href="./main.mjs">
		<link rel="modulepreload" href="./events/events.mjs">
		<link rel="modulepreload" href="./gl-vec2/add.mjs">
		<link rel="modulepreload" href="./gl-vec2/ceil.mjs">
		<link rel="modulepreload" href="./gl-vec2/clone.mjs">
		<link rel="modulepreload" href="./gl-vec2/copy.mjs">
		<link rel="modulepreload" href="./gl-vec2/create.mjs">
		<link rel="modulepreload" href="./gl-vec2/cross.mjs">
		<link rel="modulepreload" href="./gl-vec2/dist.mjs">
		<link rel="modulepreload" href="./gl-vec2/distance.mjs">
		<link rel="modulepreload" href="./gl-vec2/div.mjs">
		<link rel="modulepreload" href="./gl-vec2/divide.mjs">
		<link rel="modulepreload" href="./gl-vec2/dot.mjs">
		<link rel="modulepreload" href="./gl-vec2/epsilon.mjs">
		<link rel="modulepreload" href="./gl-vec2/equals.mjs">
		<link rel="modulepreload" href="./gl-vec2/exactEquals.mjs">
		<link rel="modulepreload" href="./gl-vec2/floor.mjs">
		<link rel="modulepreload" href="./gl-vec2/forEach.mjs">
		<link rel="modulepreload" href="./gl-vec2/fromValues.mjs">
		<link rel="modulepreload" href="./gl-vec2/index.mjs">
		<link rel="modulepreload" href="./gl-vec2/inverse.mjs">
		<link rel="modulepreload" href="./gl-vec2/len.mjs">
		<link rel="modulepreload" href="./gl-vec2/length.mjs">
		<link rel="modulepreload" href="./gl-vec2/lerp.mjs">
		<link rel="modulepreload" href="./gl-vec2/limit.mjs">
		<link rel="modulepreload" href="./gl-vec2/max.mjs">
		<link rel="modulepreload" href="./gl-vec2/min.mjs">
		<link rel="modulepreload" href="./gl-vec2/mul.mjs">
		<link rel="modulepreload" href="./gl-vec2/multiply.mjs">
		<link rel="modulepreload" href="./gl-vec2/negate.mjs">
		<link rel="modulepreload" href="./gl-vec2/normalize.mjs">
		<link rel="modulepreload" href="./gl-vec2/random.mjs">
		<link rel="modulepreload" href="./gl-vec2/rotate.mjs">
		<link rel="modulepreload" href="./gl-vec2/round.mjs">
		<link rel="modulepreload" href="./gl-vec2/scale.mjs">
		<link rel="modulepreload" href="./gl-vec2/scaleAndAdd.mjs">
		<link rel="modulepreload" href="./gl-vec2/set.mjs">
		<link rel="modulepreload" href="./gl-vec2/sqrDist.mjs">
		<link rel="modulepreload" href="./gl-vec2/sqrLen.mjs">
		<link rel="modulepreload" href="./gl-vec2/squaredDistance.mjs">
		<link rel="modulepreload" href="./gl-vec2/squaredLength.mjs">
		<link rel="modulepreload" href="./gl-vec2/sub.mjs">
		<link rel="modulepreload" href="./gl-vec2/subtract.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat2.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat2d.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat3.mjs">
		<link rel="modulepreload" href="./gl-vec2/transformMat4.mjs">
		<link rel="modulepreload" href="./impetus/impetus.mjs">
		<link rel="modulepreload" href="./mouse-event-offset/index.mjs">
		<link rel="modulepreload" href="./mouse-wheel/wheel.mjs">
		<link rel="modulepreload" href="./to-px/index.mjs">
		<link rel="modulepreload" href="./parse-unit/index.mjs">
		<link rel="modulepreload" href="./pan-zoom/index.mjs">
		<link rel="modulepreload" href="./touch-pinch/index.mjs">
		<link rel="modulepreload" href="./touch-position/index.mjs">
	<!-- temporary concept-->
	<link rel="modulepreload" href="./insertsvg.mjs">
	<link rel="modulepreload" href="./insertxhtml.mjs">
	<!-- for markdown editor-->
	<link rel="modulepreload" href="/simplemde/simplemde.mjs">
	<!--		<link rel="stylesheet" type="text/css" href="/normalize.css" media="screen">-->
	<!--				<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" type="text/css">-->
	<!--				<link rel="stylesheet" type="text/css" href="/stylesheet.css" media="screen">-->
	<!--				<link rel="stylesheet" type="text/css" href="/github-light.css" media="screen">-->
	<!--				<link rel="canonical" href="https://simplemde.com/" />-->
</head>
<body>
	<section class="panzoom svgcontainer" > 
	</section>
	<footer class="buttons">
		<button class="switch">Switch pointer events</button>
		<button class='zoom-out'>Zoom Out</button>
		<input type="range" class="zoom-range" step="0.05" min="0.3" max="6">
		<button class='zoom-in'>Zoom In</button>
		<button class="reset">Reset</button>
		<button class="previous">Previous</button>
		<input type ="text" class = "svgname" value="...">
		<button class="next">Next</button>
  	</footer>
</body>
<script nomodule>alert ("Your browser: does not support ES6 modules")</script>
<script type = "module">
	import {insertSvgElem} from "/insertsvg.mjs"
	import {insertHtmlElemFromText} from "/insertxhtml.mjs"

	// We rely on 'section' height 440 mm as defined in css. Add top and bottom margins in total 20 mm. 
	// The effect should be that 1 svg user unit = 1 mm. viewBox can't be given in css.
	let svga3 = insertSvgElem(document.querySelector(".svgcontainer"), "svg",  {baseProfile:"basic",
		version:"2.0" ,  border:"true", viewBox:"0, 0, 297, 420", class:"a3"})
	svga3.style.fontSize = 3.52777; // This is 10 pt in paper fonts. Unitless lengths can't be given through css.
	let defs = svga3.addChild({tag:"defs"})
	let paper = svga3.addChild({ tag:"g", class:"paper"})
	def_mm_grid()
	def_cm_grid()
	// to override css styles, put the attributes inside a "style" attribute:
	paper.addChild({ tag:"rect", class:"paper", style:"fill:url(#cmgrid)"})

	paper.addChild({tag:"circle",  class:"co5", cx:0, cy:420, r:210})
	paper.addChild({tag:"text",   x:0, y:420, class:"co5", textContent:"co5 circle"})
	paper.addChild({tag:"rect", x:25, y:27.52, height:2.48, width:5})
	let te = paper.addChild({tag:"text",  x:35, y:30, textContent:"Arial 10 pt, x = 35mm, y = 30mm"})
				   
	let fo = paper.addChild({tag:"foreignObject", width:100, height:50, x:25, y:50}) // requiredExtensions:"http://example.com/SVGExtensions/EmbeddedXHTML" is false in Chrome
	let htmlstring = `<body xmlns="http://www.w3.org/1999/xhtml"><textarea spellcheck="false">Write here</textarea></body>`	
	let bo =  insertHtmlElemFromText(fo, htmlstring)
	//bo.style.fontSize = 3.52777;
	//let ta = fo.addChild({tag:"textarea", x:25, y:55, width:200, height:200, textContent:"Hei hei", id:"feer", name:"feer", rows: "1", cols:"25"})

//fr.setAttribute("stroke-width", "0.03")


function def_mm_grid(){
	let mmGrid = defs.addChild({tag:"pattern", id:"mmgrid", width:"1", height:"1", patternUnits:"userSpaceOnUse"})
	// to use attributes including a '-', use setAttribute directly like this:
	//mmGrid.addChild({tag:"path", d:"M 1 0 L 0 0 0 1", fill:"none", stroke:"var(--co5)"}).setAttribute("stroke-width", "0.01")
	mmGrid.addChild({tag:"rect", width:1, height:1, fill:"var(--co6)", stroke:"var(--co4)"}).setAttribute("stroke-width", "0.03")
}

function def_cm_grid(){
	let cmGrid = defs.addChild({tag:"pattern", id:"cmgrid", width:"10", height:"10", patternUnits:"userSpaceOnUse"})
    cmGrid.addChild({tag:"rect", width:10, height:10, style:"fill:url(#mmgrid)", stroke:"var(--co5)"}).setAttribute("stroke-width", "0.1")
}


</script>
<script type = "module" src = "/EE_panzoom.mjs"></script>
</html>
