/* brown-cyan color scheme https://github.com/cormullion/ColorSchemes.jl
    starting brown, lightest at co5 and co6, blue at 9 */
:root {--co1: rgb(89,51,22);
--co2: rgb(143,107,74);
--co3: rgb(186,157,131);
--co4: rgb(210,195,178);
--co5: rgb(213,225,219);
--co6: rgb(194,239,243);
--co7: rgb(163,236,248);
--co8: rgb(129,218,239);
--co9: rgb(87,166,197);	}
/*   
1 pt = 1 typographical point (as used in MS Word) =  0.352777mm
1 px = 0.26458333 mm, on low resolution devices px = pixel.
1 pc = 1 pica = 12 pt = 4.2324 mm 
0.5 pt = 'thin visible border line on paper' = 0.1763888 mm
12 pt = 4.23324 mm
10 pt = 3.52777 mm
5 pt = 1.7638850 mm
*/
body {
     font-family: Arial, Helvetica, sans-serif;
     line-height: 1.5;
     margin:0 0 0 0;
     background:var(--co1);}
 section {display:block;
    height:440mm;
    width:317mm}
svg.a3 {
        margin:10mm;
        padding: 0mm;
        border: 0mm;       
        width:297mm;
        height:420mm; /* border comes in addition to height.*/
        background:var(--co2);
        fill:var(--co1);
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
em { font-size: 1.5em }
/* remove all style from g that is not paper! Such groups must not affect styiling. */
g.paper {                    
    width:100%; height:100%; /* paper dimensions determined by parent width and height*/
    }

g.paper *:not([class]):not(text){  
      /*   stroke: black;
        border: 0.5pt;
        fill:var(--co1);
        font-family: Calibri, Arial, Helvetica, sans-serif;*/
        }


rect.paper{width:100%; height:100%; /* paper dimensions determined by parent class
        The paper rectangle could have a grid style fill */
    fill-opacity:1.0;
       /* fill in svg corresponds to color in html css. */
    border: 0pt;
}
 header, footer {padding: 0.5em 0.5em 0.8em 0.5em;
    margin:0 -0.5em 0em -0.5em;
    width:100%;
    clear:both;
    background:var(--co2);
    color:var(--co7)
 }
 footer{position:fixed; 
    bottom:0;
    left:0;}

 button { border-radius: 0.3em; 
    background:var(--co3);
    border-color:var(--co4);
    color:var(--co5)}
    .zoom-out {border-radius: 0.67em 0 0 0.67em}
    .zoom-in {border-radius: 0 0.67em 0.67em 0}
    .previous {border-radius: 0.67em 0 0 0.67em}
    .next {border-radius: 0 0.67em 0.67em 0}
 input { vertical-align: bottom;}
 input[type="text"] {color:var(--co9); text-align:center; background-color:var(--co5);}
 div {overflow: hidden; position: relative; border: solid}
 object { pointer-events:none; border: solid}

/* redefined for specific elements below*/
text {
    line-height: 1.0;
    pointer-events: all;
    fill:black;
    border:0;
}
 text:hover {stroke-width:0.05em;stroke:var(--co6);visibility:visible}
 circle {stroke:var(--co2);
    fill:var(--co3);
    fill-opacity:0.6;
    stroke-width:.05em;
    stroke-opacity:0.6; 
    }
 circle.co1{stroke:var(--co1);fill:var(--co1)}
 circle.co2{stroke:var(--co1);fill:var(--co2)}
 circle.co3{stroke:var(--co2);fill:var(--co3)}
 circle.co4{stroke:var(--co3);fill:var(--co4)}
 circle.co5{stroke:var(--co4);fill:var(--co5)}
 circle.co6{stroke:var(--co5);fill:var(--co6)}
 circle.co7{stroke:var(--co6);fill:var(--co7)}
 circle.co8{stroke:var(--co7);fill:var(--co8)}
 circle.co9{stroke:var(--co8);fill:var(--co9)}
 polyline {fill:none;stroke:var(--co2);stroke-width:.05em;}
 polyline:hover {stroke-width:.4em;}
 polyline.co1{stroke:var(--co1)}
 polyline.co2{stroke:var(--co1)}
 polyline.co3{stroke:var(--co2)}
 polyline.co4{stroke:var(--co3)}
 polyline.co5{stroke:var(--co4)}
 polyline.co6{stroke:var(--co5)}
 polyline.co7{stroke:var(--co6)}
 polyline.co8{stroke:var(--co7)}
 polyline.co9{stroke:var(--co8)}

 
 rect.co1{fill:var(--co1)}
 rect.co3{stroke:var(--co2);fill:var(--co3)}
 rect.co4{stroke:var(--co3);fill:var(--co4)}
 rect.co5{stroke:var(--co4);fill:var(--co5)}
 rect.co6{stroke:var(--co5);fill:var(--co6)}
 rect.co7{stroke:var(--co6);fill:var(--co7)}
 rect.co8{stroke:var(--co7);fill:var(--co8)}
 rect.co9{stroke:var(--co8);fill:var(--co9)}


 g {
    cursor: move; /* fallback: no `url()` support or images disabled */
    cursor: url(images/grab.cur); /* fallback: Internet Explorer */
    cursor: -webkit-grab; /* Chrome 1-21, Safari 4+ */
    cursor:    -moz-grab; /* Firefox 1.5-26 */
    cursor:         grab; /* W3C standards syntax, should come least */
 }
 g:active {
    cursor: url(images/grabbing.cur);
    cursor: -webkit-grabbing;
    cursor:    -moz-grabbing;
    cursor:         grabbing;
            }
 